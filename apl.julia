# A Programming Language; An Interactive Approach
# Book exercises


a = .75

@assert 2*a == 1.5
@assert 4+a == 4.75
@assert a*a == 0.5625
@assert a == a

b=[1,2,3,4,5]
@assert 2*b == [2,4,6,8,10]
@assert a.+b == [1.75, 2.75, 3.75, 4.75, 5.75]
@assert b.*b == [1,4,9,16,25]
a=2 .+(b=[3,1,5]) # this needs a space after 2, invalid syntax "2.+"
@assert b == [3,1,5]
@assert a == [5,3,7]

# List all defined variables
#=
  varinfo(m::Module=Main, pattern::Regex=r""; all::Bool = false, imported::Bool = false, sortby::Symbol = :name)

  Return a markdown table giving information about exported
  global variables in a module, optionally restricted to
  those matching pattern.
=#

